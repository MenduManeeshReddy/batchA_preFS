Stanely a old grand father reads a news paper daily.
While reading a newspaper his grandsone sits besides him. 
His grandson is intresed in the puzzle given in the newspaper. 
In the puzzle there will be few rows and columns which contains only alphabets 
and a new word will be given at the end. 
we have to find whether the word is present in the above given rows or columns and 
print the corresponding row and column indices .
Help Stanely and his grandsone to solve this. 


assume the length of the word is <= rowsize/columnsize
and the word may be present either vertically or horizontally

if the word is not present print -1


Sample Test Case
input = 3 3
a b c
d e f
g h i
ef
output = 
1 1 1 2

Explanation
The word "ef" is found at index (1,1) and ends at (1,2)

Sample Test Case-2
input = 3 3
a b c
d e f
g h i
ghi
output = 
2 0 2 2

Explanation
The word "ghi" is found at index (2,0) and ends at (2,2)


Sample Test Case-2
input = 3 4
a b c d
d e f g
g h i k
fi
output = 
1 2 2 2

Explanation
The word "fi" is found at index (1,2) and ends at (2,2)


Sample Test Case-3
input = 
2 2
a d
z x
af
output = 
-1


Sample Test Case-3
input =
3 3
q w e
a s d
z x c
qe
output = 
-1

******************************
import java.util.*;
class Test
{
	public static int returnStringIndexIfFound(String str1,String str2)
	{
	    int l1 = str1.length(); 
        int l2 = str2.length(); 
        int i,j;     

        for ( i = 0; i <= l2 - l1; i++) 
			{ 

          for (j = 0; j < l1; j++) 
                if (str2.charAt(i + j) != str1.charAt(j)) 
						break;
           if (j == l1) 
				 	return i; 
			} 
      
        return -1; 
    } 

	
	public static void main(String[] args) 
	{
		Scanner sc = new Scanner(System.in);
		int m=sc.nextInt();
		int n=sc.nextInt();
		char a[][]=new char[m][n];
		for(int i=0;i<m;i++)
		{
			for(int j=0;j<n;j++){
			a[i][j]=sc.next().charAt(0);
			}
		}
		String str = sc.next();
     StringBuilder sb ;
	 int foundIndex=-1;
	for(int i=0;i<m;i++)
		{
			sb=new StringBuilder();
			for(int j=0;j<n;j++)
			   sb.append(a[i][j]);
			if((foundIndex = returnStringIndexIfFound(str,sb.toString()))>=0)
			{
				System.out.println(i+" "+foundIndex+" "+i+" "+(foundIndex+str.length()-1));
			    return ;
			}
		}
       for(int i=0;i<n;i++)
		{
			sb=new StringBuilder();
			for(int j=0;j<m;j++){
			   sb.append(a[j][i]);
			if((foundIndex = returnStringIndexIfFound(str,sb.toString()))>=0)
			{
				System.out.println(foundIndex+" "+i+" "+i+" "+(foundIndex+str.length()-1));
				 return;
		}
			}
		}
System.out.println(-1);
}
}
